1. Bubble Sort
Time Complexity:
    Best Case: O(n) (when the array is already sorted)
    Average Case: O(n^2)
    Worst Case: O(n^2)
Space Complexity: O(1) (in-place sorting)

2. Selection Sort
Time Complexity:
    Best Case: O(n^2)
    Average Case: O(n^2)
    Worst Case: O(n^2)
Space Complexity: O(1) (in-place sorting)

3. Insertion Sort
Time Complexity:
    Best Case: O(n) (when the array is already sorted)
    Average Case: O(n^2)
    Worst Case: O(n^2)
Space Complexity: O(1) (in-place sorting)

4. Merge Sort
Time Complexity:
    Best Case: O(n log n)
    Average Case: O(n log n)
    Worst Case: O(n log n)
Space Complexity: O(n) (due to auxiliary arrays for merging)

5. Quick Sort
Time Complexity:
    Best Case: O(n log n) (when the pivot divides the array into two equal halves)
    Average Case: O(n log n)
    Worst Case: O(n^2) (when the pivot is always the smallest or largest element)
Space Complexity: O(log n) (due to recursive stack calls)

6. Heap Sort
Time Complexity:
    Best Case: O(n log n)
    Average Case: O(n log n)
    Worst Case: O(n log n)
Space Complexity: O(1) (in-place sorting)